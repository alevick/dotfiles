"Pathogen"
execute pathogen#infect()
autocmd FileType python map <C-H> :call Flake8()<CR>

"Vundle"
set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" add all your plugins here (note older versions of Vundle
" used Bundle instead of Plugin)

"Plugin 'Valloric/YouCompleteMe'

" All of your Plugins must be added before the following line
call vundle#end()           " required
filetype plugin on          " required

" YCM Configs
"so ~/.ycm_config

"Colors on a mac"
filetype off
syntax on
" XXX: this filetype plugin indent is fucking everything up e.g. closing
" braces in python on a separate line do not get outdented properly. WTF
filetype plugin on
filetype indent on
se term=xterm
colorscheme slate
let &t_Co=256

autocmd FileType python setlocal shiftwidth=4 tabstop=4 softtabstop=4

"Because DOS style files blow
se ff=unix 
se fileformat=unix

"Apparently necessary to be able to backspace after installing YCM
se backspace=indent,eol,start

"Fix that bullshit where vim will FORCE comments to places they don't belong
set cindent
set cinkeys-=0#
set indentkeys-=0#

"Tabs are for suckers
se expandtab
se shiftwidth=2
se tabstop=2
se softtabstop=2

"So is indenting manually
se autoindent

"Tab completion when opening files
set wildmode=longest,list,full
set wildmenu

" ~ = A E S T H E T I C S = ~ "
se hlsearch
se nu
se modeline
se ls=2
se ruler
se hidden
se cursorline
se statusline+="%F %m"
hi MatchParen ctermbg=darkcyan ctermfg=white
hi CursorLine   cterm=underline ctermbg=None ctermfg=NONE guibg=darkred guifg=white
hi Visual cterm=reverse ctermbg=None ctermfg=None

"Special file extension syntax highlighting
au BufReadPost *.j2 set syntax=yaml

" " " " " " " " " " " "
"Show all buffers and quickswitch"
map <C-L> :buffers<CR>:b<Space>
"Kill current buffer
map <C-K> :bn\|bd # <CR>
"Next buffer
map <C-N> :execute "bn" <CR>
"Previous buffer
map <C-P> :execute "bp" <CR>
"Alternate buffer
map <C-J> :b# <CR>
"Resize windows {vertically|horizontally} {smaller|bigger} (in that order)
map <C-Left> :vertical resize -1 <CR>
map <C-Right> :vertical resize +1 <CR>
map <C-Down> :resize -1 <CR>
map <C-Up> :resize +1 <CR>
map <Esc>[D :vertical resize -1 <CR>
map <Esc>[C :vertical resize +1 <CR>
map <Esc>[B :resize -1 <CR>
map <Esc>[A :resize +1 <CR>
"Esc remapping
nmap qq <Esc>
imap qq <Esc>
vmap qq <Esc>
cmap qq <Esc>

" " " " " " " " " " " "

" Using tabs as buffers -> IMPROPER
"Move tabs to the left or right with gt and gT"
"map gT :execute "tabmove" tabpagenr() - 2 <CR>
"map gt :execute "tabmove" tabpagenr() <CR>

"Switch tabs using ctrl-h and ctrl-l"
"map <C-H> :execute "tabNext" <CR>
"map <C-L> :execute "tabnext" <CR>

" " " " " " " " " " " "

"Make <space> leader key
let mapleader = " "

"Switch moving in wrapped lines and moving between lines"
noremap j gj
noremap k gk
noremap gj j
noremap gk k

"Don<F3>'t allow wq command because I need a magic dialing wand or else I accidentally quit all the time"
"cmap wq WQ_IS_BOD

"Use different colorscheme for vimdiff because otherwise it's illegible"
if &diff
    colorscheme default
endif

so ~/.vimrc_local
